{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SACA,MAAMC,EAAOC,SAASC,cAAc,SAClBF,EAAKE,cAAc,yBAErC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAAKC,KACvBC,YAAW,KACaC,KAAKC,SAAW,GAGpCJ,EAAI,uBAAqBH,QAAiBC,OAExCG,EAAE,sBAAoBJ,QAAeC,MAAU,GAElDA,EAAM,G,CAKbL,EAAKY,iBAAiB,UAEtB,SAAiBC,GACfA,EAAMC,iBACN,MACEC,UAAUV,MAAEA,EAAKW,KAAEA,EAAIC,OAAEA,IACvBJ,EAAMK,cAEV,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAOG,MAAOD,GAAK,EACrChB,EAAcgB,EAAGE,OAAOhB,EAAMe,OAASC,OAAOL,EAAKI,OAASD,EAAI,KAC7DG,MAAKC,IACJC,EAAA1B,GAAS2B,OAAOC,QAAQH,EAAQ,IAEjCI,OAAMJ,IACNC,EAAA1B,GAAS2B,OAAOG,QAAQL,EAAQ,G","sources":["src/js/03-promises.js"],"sourcesContent":["import notiflix from 'notiflix';\nconst form = document.querySelector('.form');\nconst submitBtn = form.querySelector('button[type=\"submit\"]');\n\nfunction createPromise(position, delay) {\n  return new Promise((res, rej) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n\n      if (shouldResolve) {\n        res(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        rej(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n}\n//\n\nform.addEventListener('submit', onClick);\n\nfunction onClick(event) {\n  event.preventDefault();\n  const {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n\n  for (let i = 1; i < amount.value; i += 1) {\n    createPromise(i, Number(delay.value) + Number(step.value * (i - 1)))\n      .then(message => {\n        notiflix.Notify.success(message);\n      })\n      .catch(message => {\n       notiflix.Notify.failure(message);\n      });\n  }\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","Promise","res","rej","setTimeout","Math","random","addEventListener","event","preventDefault","elements","step","amount","currentTarget","i","value","Number","then","message","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.05179bc9.js.map"}